.row {
    max-width: $grid-width;
    @include respond(tab-port) {
        max-width: 60rem;
        padding: 4rem;
    }
    margin: 0 auto;
    //check the element that has 0 on height then clear it.
    @include clearfix;
    // .row::after{clear:both}  after each row add a clear

    &:not(:last-child) {
        margin-bottom: $vertical-gutter-width;
        @include respond(tab-port) {
            margin-bottom: $vertical-gutter-width-small;
        }
    }

    [class^="col-"] {
        // background-color: rgb(255, 0, 212);
        // text-align: center;
        // padding: 2rem;
        float: left;
        &:not(:last-child) {
            margin-right: $horizontal-gutter-width;
            @include respond(tab-port) {
                margin-right: 0;
            }
        }
        @include respond(tab-port) {
            width: 100% !important;
            margin-bottom: $vertical-gutter-width-small;
        }
    }
    // make sure to separate the plus sign from the # sign with a space
    // since the space in sass does matter.
    .col-1-of-2 {
        // the native calc function allow to mix units as opposed.
        // to making the native sass calculation.
        width: calc((100% - #{$horizontal-gutter-width}) / 2);
    }
    .col-1-of-3 {
        width: calc((100% - (2 * #{$horizontal-gutter-width})) / 3);
    }
    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$horizontal-gutter-width}) / 3) + #{$horizontal-gutter-width});
    }
    .col-1-of-4 {
        width: calc((100% - (3 * #{$horizontal-gutter-width})) / 4);
    }
    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$horizontal-gutter-width}) / 4) + #{$horizontal-gutter-width});
    }
    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$horizontal-gutter-width}) / 4) + 2 * #{$horizontal-gutter-width});
    }
}
.remove-mb {
    @include respond(tab-port) {
        margin-bottom: -9.5rem !important;
    }
}
