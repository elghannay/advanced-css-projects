/*

colors :
light green: #7ed56f;
medium green: #55c57a;
dark blue : #022859;
dark blue : #0D518C;
dark blue : #F2F2F2;
dark blue : #0A7AA6;
*/

*, *::after, *::before {
  padding: 0;
  margin: 0;
  box-sizing: inherit;
  /* everything will inherit the box sizing */
}

html {
  /* set 1 rem -> 10px and keep it relative to the 
    default browser font size at the same time */
  /* why not using 100% ? we don't want to bother 
  ourselves with calculation convert to multiple of 1o */
  font-size: 62.5%;
}

body {
  font-family: roboto, sans-serif;
  font-size: 1.6rem;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, #35b6f1d0, #5464f3d0), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.text-box {
  text-align: center;
  /* center the button */
  color: white;
  text-transform: uppercase;
  /* the position is in relation to the parent element */
  position: absolute;
  top: 40%;
  left: 50%;
  /* the translate depends on the element itself */
  transform: translate(-50%, -50%);
  /*you can always use flex box*/
  /* display: flex;
  justify-content: center;
  align-items: center;
  height: 80%; */
  backface-visibility: hidden;
  /* to prevent the animation from shaking */
}

.primary-heading--main {
  font-size: 6rem;
  display: block;
  letter-spacing: 1.7rem;
  animation: moveLeft 1000ms ease-in-out;
}

.primary-heading--sub {
  font-size: 2rem;
  display: block;
  letter-spacing: 1rem;
  margin-bottom: 4rem;
  animation: moveRight 1s ease-in-out;
}

/******** keyframes definitions *********/

@keyframes moveLeft {
  0% {
    transform: translateX(50%);
    opacity: 0%;
  }
  80% {
    transform: translateX(-10%);
  }
  100% {
    opacity: 100%;
    transform: translateX(0%);
  }
}

@keyframes moveRight {
  0% {
    transform: translateX(-50%);
    opacity: 0%;
  }
  80% {
    transform: translateX(+10%);
  }
  100% {
    transform: translateX(0%);
    opacity: 100%;
  }
}

@keyframes moveFromDown {
  0% {
    transform: translateY(3rem);
    opacity: 0%;
  }
  100% {
    transform: translateX(0rem);
    opacity: 100%;
  }
}

/******** END keyframes *********/

.btn:link, .btn:visited {
  text-transform: uppercase;
  /* obligatory for the transform on hover to work */
  display: inline-block;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  transition: all .2s ease;
  /* for the animation of the button */
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  transform: translateY(-.2rem);
  box-shadow: 0rem 1rem 1rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-.1rem);
  box-shadow: 0rem .5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  width: 100%;
  height: 100%;
  display: inline-block;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn--white::after {
  background-color: white;
}

.btn:hover::after {
  transform: scaleX(1.2) scaleY(1.5);
  opacity: 0;
}

.btn--animation {
  animation: moveFromDown .5s ease-out .75s;
  animation-fill-mode: backwards;
  /* forces the start value of the animation */
}